# vim: set fileencoding=utf-8 sw=4 ts=4 et :

[connector-syncevents]
# Âge minimum (en minutes) d'une alerte, au dessous duquel on ne demande pas de
# mise à jour à Nagios.
# On a configuré Nagios pour qu'il ré-envoie les notifications après 30
# minutes, il vaut donc mieux régler ici une valeur légèrement supérieure, pour
# ne cibler que les états désynchronisés.
minutes_old = 45

# Nombre maximum de demandes de mise à jour à envoyer lors de la même exécution.
# Par défaut: 100. Sur de grandes installations, on peut monter à 500.
max_events = 100


[bus]
# Nom ou adresse IP du serveur XMPP à utiliser.
host = localhost

# Nom du service de publication pour les messages.
service = pubsub.localhost

# Nom d'utilisateur à utiliser pour se connecter au bus.
jid = connector-syncevents@localhost

# Mot de passe à utiliser
password = connector-syncevents

# Si require_* à True, le chiffrement de la connexion sera privilégié.
# Indique s'il faut chiffrer la connexion (True).
require_tls = False

# Indique s'il faut compresser le flux (True)
require_compression = False

# Liste des noms des topics auxquels le connecteur est abonné,
# séparés par des virgules.
# Si la liste est vide, mettre uniquement une virgule.
subscriptions = ,

# Le trafic lié au bus XMPP doit-il être enregistré dans les logs ?
log_traffic = False

[publications]
# Noms des messages XML traités avec pour chaque type de message
# le nom du nœud XMPP sur lesquel les messages de ce type sont envoyés.
command = /vigilo/command

[database]
sqlalchemy_url = postgresql://vigilo:vigilo@localhost/vigilo
db_basename = vigilo_
; affichage des requetes SQL (debug)
;sqlalchemy_echo = false


[loggers]
keys = root,twisted,sqlalchemy

[handlers]
keys = syslog,console

[formatters]
keys = consoleFormatter,syslogFormatter

[logger_root]
level = INFO
handlers = syslog,console

[logger_twisted]
level = WARNING
qualname = twisted
propagate = 0
handlers = syslog,console

[logger_sqlalchemy]
; mettre le level a INFO pour afficher les requetes SQL
level = WARNING
handlers = console
qualname = sqlalchemy.engine
propagate = 0

[handler_console]
class = StreamHandler
level = NOTSET
formatter = consoleFormatter
args = (sys.stdout, )

[handler_syslog]
class = handlers.SysLogHandler
level = NOTSET
formatter = syslogFormatter
args = '/dev/log', 'daemon'

[formatter_consoleFormatter]
format = [%(created)f] %(message)s
datefmt =
class = vigilo.common.logging.VigiloFormatter

[formatter_syslogFormatter]
format = %(processName)s[%(process)d]: %(levelname)s::%(message)s
datefmt =
class = vigilo.common.logging.VigiloFormatter
