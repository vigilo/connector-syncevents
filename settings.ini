[bus]
# Liste des serveurs AMQP (noms ou adresses IP) à utiliser,
# séparés par des virgules. Un numéro de port peut être spécifié
# en ajoutant ":" suivi du numéro après le nom / l'adresse du serveur.
# Par défaut, le port 5670 est utilisé lorsque l'option "use_ssl" vaut
# False ou 5671 lorsque l'option vaut True.
hosts = localhost

# Nom d'utilisateur à utiliser pour se connecter au bus.
user = connector-syncevents

# Mot de passe à utiliser
password = connector-syncevents

# Chiffrement du flux par SSL
use_ssl = False

# Le trafic lié au bus doit-il être enregistré dans les logs ?
log_traffic = False


[connector-syncevents]
# Âge minimum (en minutes) d'une alerte, au dessous duquel on ne demande pas de
# mise à jour à Nagios.
# On a configuré Nagios pour qu'il ré-envoie les notifications après 30
# minutes, il vaut donc mieux régler ici une valeur légèrement supérieure, pour
# ne cibler que les états désynchronisés.
minutes_old = 45

# Nombre maximum de demandes de mise à jour à envoyer lors de la même exécution.
# Par défaut: 100. Sur de grandes installations, on peut monter à 500.
max_events = 100


[database]
sqlalchemy_url = postgresql://vigilo:vigilo@localhost/vigilo
db_basename = vigilo_
; affichage des requetes SQL (debug)
;sqlalchemy_echo = false

[connector]
# Nom d'hôte utilisé pour signaler à Vigilo que ce connecteur fonctionne
# correctement. Cela doit correspondre au nom d'hôte configuré dans VigiConf
# pour cette machine. Par défaut, on utilise le nom d'hôte court (sans le
# domaine DNS)
#hostname = hostname

# Service utilisé pour signaler à Vigilo que ce connecteur fonctionne
# correctement. Comme ci-dessus, cela doit correspondre au nom de service
# configuré dans VigiConf.
#status_service = vigilo-connector-syncevents

# L'exchange à utiliser pour les messages d'état du connecteur.
# Par défaut, la section [publications] est utilisée.
#status_exchange = connectors-status


[publications]
# Types de messages et le nom de l'exchange à utiliser pour leur publication.
# Par défaut, un exchange du même nom que le type est utilisé.
#perf = perf
#nagios = nagios

# -------
# Logging
#

[loggers]
keys = root,twisted,sqlalchemy

[handlers]
keys = syslog,console

[formatters]
keys = consoleFormatter,syslogFormatter

[logger_root]
level = INFO
handlers = syslog,console

[logger_twisted]
level = WARNING
qualname = twisted
propagate = 0
handlers = syslog,console

[logger_sqlalchemy]
; mettre le level a INFO pour afficher les requetes SQL
level = WARNING
handlers = console
qualname = sqlalchemy.engine
propagate = 0

[handler_console]
class = StreamHandler
level = NOTSET
formatter = consoleFormatter
args = (sys.stdout, )

[handler_syslog]
class = handlers.SysLogHandler
level = NOTSET
formatter = syslogFormatter
args = '/dev/log', 'daemon'

[formatter_consoleFormatter]
format = [%(created)f] %(message)s
datefmt =
class = vigilo.common.logging.VigiloFormatter

[formatter_syslogFormatter]
format = %(processName)s[%(process)d]: %(levelname)s::%(message)s
datefmt =
class = vigilo.common.logging.VigiloFormatter


# vim: set fileencoding=utf-8 sw=4 ts=4 et :
