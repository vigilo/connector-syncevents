#! /bin/sh
#
# vigilo-connector-syncevents       Init script for the vigilo-connector-syncevents connector
#
#
# chkconfig: 345 95 05
# description: Starts and stops the vigilo-connector-syncevents connector
### BEGIN INIT INFO
# Provides: vigilo-connector-syncevents
# Required-Start: $network $syslog
# Should-Start: $named
# Required-Stop: $network $syslog
# Should-Stop: $named
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: vigilo-connector-syncevents connector
# Description: vigilo-connector-syncevents connector.
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/bin/vigilo-connector-syncevents
NAME=vigilo-connector-syncevents
TAPNAME=vigilo-syncevents
LOCK_FILE=/var/lock/$NAME

USER=vigilo-syncevents
PID_FILE=/var/run/$NAME/$NAME.pid
TWISTD_OPTIONS=""
OPTIONS=""

if [ -f /etc/default/$NAME ] ; then
    . /etc/default/$NAME
fi
if [ -f /lib/lsb/init-functions ] ; then
    . /lib/lsb/init-functions
fi

if [ "$START" != "true" ]; then
    exit 0
fi

export USER PID_FILE TWISTD_OPTIONS OPTIONS

test -x $DAEMON || exit 0

success() {
    log_progress_msg "OK"
    log_end_msg 0
}
failure() {
    log_end_msg 1
}

start() {
    [ -f $LOCK_FILE ] && return

    if [ "$1" = "debug" ]; then
        TWISTD_OPTIONS="$TWISTD_OPTIONS --logfile - -n"
        OUTPUT=""
    else
        TWISTD_OPTIONS="$TWISTD_OPTIONS --logfile /dev/null"
        OUTPUT=">/dev/null 2>&1"
    fi

    echo -n "Starting $NAME: "
    su -s /bin/bash - $USER -c "$DAEMON --pidfile $PID_FILE $TWISTD_OPTIONS $TAPNAME $OPTIONS $OUTPUT"
    RETVAL=$?
    [ "$1" = "debug" ] && return
    if [ $RETVAL -eq 0 ]; then
        # Wait 3s to make sure it started properly (auth)
        i=0
        while [ $i -lt 3 ]; do
            sleep 1
            if ! pidofproc -p $PID_FILE $DAEMON >/dev/null; then
                RETVAL=1
                break
            fi
            i=$(($i + 1))
            echo -n "."
        done
        [ $RETVAL -eq 0 ] && success || failure
    else
        failure
    fi
    echo
    [ $RETVAL -eq 0 ] && touch $LOCK_FILE
}

stop() {
    echo -n "Shutting down $NAME: "
    killproc -p $PID_FILE $NAME
    RETVAL=$?
    [ $RETVAL -eq 0 ] && rm -f $LOCK_FILE && success || failure
}

reload() {
    echo -n "Reloading $NAME: "
    killproc -p $PID_FILE $NAME -HUP
    RETVAL=$?
    echo
}



case "$1" in
    start)
        start
    ;;
    stop)
        stop
    ;;
    status)
        status_of_proc -p $PID_FILE $DAEMON $NAME && exit 0 || exit $?
    ;;
    reload)
        reload
    ;;
    restart)
        stop
        start
    ;;
    condrestart)
        if [ -f $LOCK_FILE ]; then
            stop
            start
        fi
    ;;
    debug)
        start "debug"
    ;;
    *)
        echo "Usage: $0 {start|stop|restart|reload|condrestart|status|debug}" >&2
        RETVAL=1
    ;;
esac

exit $RETVAL
